html,
body {
  padding: 0;
  margin: 0;
  font-family: "Montserrat", Segoe UI, Roboto, Oxygen, Ubuntu, Cantarell,
    Fira Sans, Droid Sans, Helvetica Neue, sans-serif;
  text-rendering: optimizeLegibility;
}

a {
  color: inherit;
  text-decoration: none;
}

* {
  box-sizing: border-box;
}

strong {
  font-weight: 500;
}

input {
  padding: 0 1.15rem;
  height: 49px;
}

textarea {
  padding: 1rem 1.3rem;
  resize: none;
}

input,
textarea {
  font-size: 1em;
  font-weight: 300;
  line-height: 1.42;
  letter-spacing: -0.03rem;
  font-family: "Montserrat", Segoe UI, Roboto, Oxygen;
  border-radius: 25px;
  border-style: solid;
  border-width: 0px;
  border-color: rgba(50, 50, 93, 0.25);
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,
    rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;
  &::placeholder {
    color: #999;
  }

  &:focus {
    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px,
      rgba(6, 24, 44, 0.65) 0px 4px 6px -1px,
      rgba(255, 255, 255, 0.08) 0px 1px 0px inset;
  }
}

button {
  height: 49px;
  padding: 0.7rem 1.4rem;
  font-size: 1em;
  font-weight: 300;
  line-height: 1.42;
  letter-spacing: -0.03rem;
  font-family: "Montserrat", Segoe UI, Roboto, Oxygen;
  background: #293462;
  border-style: solid;
  border-width: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border-radius: 25px;
  transition: background 0.3s;
  outline: none;
  cursor: pointer;

  &[type="submit"] {
    background: lighten(#293462, 10%);
    border-color: #293462;
    color: #fff;
    font-weight: 400;
    box-shadow: rgba(50, 50, 93, 0.25) 0px 2px 5px -1px,
      rgba(0, 0, 0, 0.3) 0px 1px 3px -1px;

    &:hover {
      background: #293462;
      border-color: #293462;
    }

    &:disabled {
      cursor: default;
      border-color: lighten(#293462, 50%);
      background: lighten(#293462, 50%);

      &:hover {
        background: lighten(#293462, 50%);
        border-color: lighten(#293462, 50%);
      }
    }
  }
}

/* Mobile page layout */
@media screen and (max-width: 768px) {
  .page-container {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
  }

  .page-sidebar {
    position: fixed;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  .page-content {
    padding-top: 12px;
  }
}

/* Desktop page layout */
@media screen and (min-width: 769px) {
  .page-container {
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: row;
  }

  .page-sidebar {
    min-width: 300px;
    flex: 0 0 25vw;
    background: #293462;
  }

  .page-content {
    flex: 1;
  }
}

/* Hamburger icon 
	* @author Jonathan Suh @jonsuh
	* @site https://jonsuh.com/hamburgers
	* @link https://github.com/jonsuh/hamburgers
	*/
.hamburger {
  padding: 20p;
  display: inline-block;
  cursor: pointer;
  transition-property: opacity, filter;
  transition-duration: 0.15s;
  transition-timing-function: linear;
  font: inherit;
  color: inherit;
  text-transform: none;
  background-color: transparent;
  border: 0;
  margin: 0;
  overflow: visible;
  opacity: 0.7;
}
.hamburger:hover {
  opacity: 0.7;
}
.hamburger.isActive:hover {
  opacity: 0.7;
}
.hamburger.isActive .hamburgerInner,
.hamburger.isActive .hamburgerInner::before,
.hamburger.isActive .hamburgerInner::after {
  background-color: #fff;
}

.hamburgerBox {
  width: 30px;
  height: 18px;
  display: inline-block;
  position: relative;
}

.hamburgerInner {
  display: block;
  top: 50%;
  margin-top: -2px;
}
.hamburgerInner,
.hamburgerInner::before,
.hamburgerInner::after {
  width: 30px;
  height: 4px;
  background-color: #fff;
  border-radius: 4px;
  position: absolute;
  transition-property: transform 0.275s ease;
}
.hamburgerInner::before,
.hamburgerInner::after {
  content: "";
  display: block;
}
.hamburgerInner::before {
  top: -10px;
}
.hamburgerInner::after {
  bottom: -10px;
}

/*
	* Elastic
	*/
.hamburgerElastic .hamburgerInner {
  top: 2px;
  transition-duration: 0.275s;
  transition-timing-function: cubic-bezier(0.68, -0.55, 0.265, 1.55);
}
.hamburgerElastic .hamburgerInner::before {
  top: 10px;
  transition: opacity 0.125s 0.275s ease;
}
.hamburgerElastic .hamburgerInner::after {
  top: 20px;
  transition: transform 0.275s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

.hamburgerElastic.isActive .hamburgerInner {
  transform: translate3d(0, 10px, 0) rotate(135deg);
  transition-delay: 0.075s;
}
.hamburgerElastic.isActive .hamburgerInner::before {
  transition-delay: 0s;
  opacity: 0;
}
.hamburgerElastic.isActive .hamburgerInner::after {
  transform: translate3d(0, -20px, 0) rotate(-270deg);
  transition-delay: 0.075s;
}
